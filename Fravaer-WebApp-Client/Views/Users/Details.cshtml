@using System
@using System.Activities.Statements
@using DateTimeExtensions
@using Fravaer_WebApp_Client.Models
@using ServiceGateways.Entities
@model Fravaer_WebApp_Client.Models.UserDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<head>
    <link href="~/Styles/UserDetailsStyleSheet.css" rel="stylesheet" type="text/css" />
</head>



<div class="MainContainer">
    <div class="col-sm-12">
        <h2 align="center">-Kalender-</h2>
    </div>
    <div class="UserDetailsDiv col-lg-3">
        <h1>Information</h1>
        <hr />
        <dl>
            <dt>
                Fornavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.FirstName)
            </dd>

            <dt>
                Efternavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.LastName)
            </dd>

            <dt>
                Brugernavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.UserName)
            </dd>

            <dt>
                Email
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Email)
            </dd>

            <dt>
                Afdeling
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Department.Name)
            </dd>

            <dt>
                Rolle
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Role)
            </dd>
        </dl>
        <hr />
        <div class="btn btn-success">
            @Html.ActionLink("Redigier", "Edit", new { id = Model.User.Id }, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
        <div class="btn btn-danger">
            @Html.ActionLink("Slet", "Delete", new { id = Model.User.Id }, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
        <div class="btn btn-warning">
            @Html.ActionLink("Tilbage", "Index", null, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
    </div>

    <div class="Container col-lg-6" style="text-align: center">

        <div class="MonthsDiv col-md-12">
            <div class="col-md-4">
                <a class="btn btn-success" href='@Url.Action("Details", "Users", new RouteValueDictionary(new {id = Model.User.Id, monthDate = Model.DateTime.AddMonths(-1), chosenAbsence = Model.ChosenAbsence}))'>Forrige</a>
            </div>
            <div class="col-md-4">
                <h3>@Model.DateTime.ToString("yyyy MMMM")</h3>
            </div>
            <div class="col-md-4">
                <a class="btn btn-success" href='@Url.Action("Details", "Users", new RouteValueDictionary(new {id = Model.User.Id, monthDate = Model.DateTime.AddMonths(1), chosenAbsence = Model.ChosenAbsence}))'>Næste</a>
            </div>
        </div>

        <div class="WeekDay col-md-2">
            <p>Mandag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Tirsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Onsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Torsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Fredag</p>
        </div>
        <div class="WeekEndDay col-md-1">
            <p>Lør</p>
        </div>
        <div class="WeekEndDay col-md-1">
            <p>Søn</p>
        </div>

        @for (int i = 0; i < GetWeekCountFromMonth(); i++)
        {
            if (i == 0)
            {
                for (int j = 0; j < @Model.InitIndex; j++)
                {

                    if (j == (7 * (i + 1)) - 1 || j == 7 * (i + 1) - 2)
                    {
                        <div class="WeekEnd col-md-1"></div>
                    }
                    else
                    {
                        <div class="col-md-2 GrayDiv"></div>
                    }
                }
            }

            for (int s = GetStartIndex(i); s <= (i + 1) * 7 - Model.InitIndex; s++)
            {
                if (s + Model.InitIndex == (7 * (i + 1)) - 1 || s + Model.InitIndex == 7 * (i + 1))
                {
                    <div class="WeekEnd col-md-1">
                        <p>@s</p>
                    </div>
                }
                else
                {
                    <div class="CalendarDay col-md-2">
                        <p align="left">@s</p>
                        @if (s <= Model.DateTime.LastDayOfTheMonth().Day)
                        {
                            if (GetAbsenceForDate(s) != null)
                            {
                                <form method="post" action="@Url.Action("Details", "Users", new RouteValueDictionary(
                                                            new
                                                            {
                                                                id = @Model.User.Id,
                                                                monthDate = @Model.DateTime.FirstDayOfTheMonth(),
                                                                absenceType = @Model.ChosenAbsence,
                                                                deletableAbsenceId = GetAbsenceForDate(s).Id
                                                            }))">
                                    <input class="AbsenceLbl" type="submit" value="@GetAbsenceForDate(s).Status.ToString()">
                                </form>

                            }
                            else
                            {
                                <form method="post" action="@Url.Action("Details", "Users", new RouteValueDictionary(
                                                            new
                                                            {
                                                                id = @Model.User.Id,
                                                                monthDate = @Model.DateTime.FirstDayOfTheMonth(),
                                                                absenceType = @Model.ChosenAbsence,
                                                                absenceDate = Model.DateTime.FirstDayOfTheMonth().AddDays(s - 1)
                                                            }))">

                                    <input class="btn btn-default btn-circle" type="submit" value="+">
                                </form>
                            }
                        }

                    </div>
                }
                if (s == Model.DateTime.LastDayOfTheMonth().Day)
                {
                    for (int m = s + Model.InitIndex; m < (i + 1) * 7; m++)
                    {
                        if (m == (7 * (i + 1)) - 1 || m == 7 * (i + 1) - 2)
                        {
                            <div class="WeekEnd col-md-1"></div>
                        }
                        else
                        {
                            <div class="col-md-2 GrayDiv"></div>
                        }
                    }
                    break;
                }
            }
        }
    </div>

    <div class="AbsenceCodeDiv col-lg-3">
        <h1>Fraværskoder:</h1>
        <hr />
        @foreach (var absence in Model.AbsenceTypes)
            {
                if (Model.ChosenAbsence != null && absence.Equals(Model.ChosenAbsence))
                {
                <input type="radio" name="absenceType" checked="checked">
                @absence
                <br />
            }
            else
            {
                <input type="radio" name="absenceType" onclick="location.href =
                    '@Url.Action("Details", "Users", new RouteValueDictionary(new {id = @Model.User.Id,
                    monthDate = Model.DateTime.FirstDayOfTheMonth(), chosenAbsence = absence}))'" />
                    @absence
                    <br />
            }
        }
        <hr />
    </div>
</div>

@functions
{

        public Absence GetAbsenceForDate(int day)
        {
            DateTime eventDate = new DateTime(@Model.DateTime.Year, @Model.DateTime.Month, day);
            return Model.User.Absences.FirstOrDefault(x => x.Date == eventDate);
        }

        public int GetStartIndex(int i)
        {
            int result = (i * 7) - Model.InitIndex;

            if (result < 0)
            {
                return (i * 7) + 1;
            }
            else
            {
                return (i * 7) + 1 - Model.InitIndex;
            }

        }

        public int GetWeekCountFromMonth()
        {
            if (Model.DateTime.LastDayOfTheMonth().Day > 30 && Model.InitIndex > 4 || Model.DateTime.LastDayOfTheMonth().Day > 29 && Model.InitIndex > 5)
            {
                return 6;
            }
            else
            {
                return 5;
            }
        }

}
