@using System.Activities.Statements
@using DateTimeExtensions
@using Fravaer_WebApp_Client.Models
@using ServiceGateways.Entities
@model Fravaer_WebApp_Client.Models.UserDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<head>
    <link href="~/Styles/UserDetailsStyleSheet.css" rel="stylesheet" type="text/css" />
</head>

<h2 align="center" style="margin-left: -53px">Detaljer</h2>
<div>

    <div class="UserDetailsDiv col-lg-2">
        <h3>Information</h3>
        <hr />
        <dl>
            <dt>
                Fornavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.FirstName)
            </dd>

            <dt>
                Efternavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.LastName)
            </dd>

            <dt>
                Brugernavn
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.UserName)
            </dd>

            <dt>
                Email
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Email)
            </dd>
            
            <dt>
                Afdeling
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Department.Name)
            </dd>
            
            <dt>
                Rolle
            </dt>

            <dd>
                @Html.DisplayFor(model => model.User.Role)
            </dd>
        </dl>
        <hr />
        <div class="btn btn-success">
            @Html.ActionLink("Redigier", "Edit", new {id = Model.User.Id}, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
        <div class="btn btn-danger">
            @Html.ActionLink("Slet", "Delete", new {id = Model.User.Id}, new
            {
                style = "text-decoration:none; color:white;"
            })
        </div>
        <div class="btn btn-warning">
            @Html.ActionLink("Tilbage", "Index", null, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
    </div>

    <div class="AbsenceCodeDiv col-lg-3">
        <div>
            <h3>Overstyrring</h3>
            <input class="Checkbox" type="checkbox" />Tillad Overstyrring

            <h3>Fraværskoder:</h3>
            <input type="radio" name="absenceType"> S - Syg<br />
            <input type="radio" name="absenceType"> HS - ½ygedag<br />
            <input type="radio" name="absenceType"> F - Ferie<br />
            <input type="radio" name="absenceType"> HF - ½feriedag<br />
            <input type="radio" name="absenceType"> FF - Feriefridag<br />
            <input type="radio" name="absenceType"> HFF - ½Feriefridag<br />
            <input type="radio" name="absenceType"> K - Kursus<br />
            <input type="radio" name="absenceType"> B - Barsel<br />
            <input type="radio" name="absenceType"> BS - Barn 1. sygedag<br />
            <input type="radio" name="absenceType"> AF - Andet fravær<br />
            <input type="radio" name="absenceType"> A - Afspadsering<br />
            <input type="radio" name="absenceType"> HA - ½afspadsering<br />
            <input type="radio" name="absenceType"> SN - Seniordag<br />

        </div>
    </div>


    <div class="Container col-lg-7" style="text-align: center">

        <div class="MonthsDiv col-md-12">
            <div class="col-md-4">
                <a class="btn btn-success" href='@Url.Action("Details", "Users", new RouteValueDictionary(new {id = Model.User.Id, monthDate = Model.DateTime.AddMonths(-1)}))'>Forrige</a>
            </div>
            <div class="col-md-4">
                <p>@Model.DateTime.ToString("yyyy MMMM")</p>
            </div>
            <div class="col-md-4">
                <a class="btn btn-success" href='@Url.Action("Details", "Users", new RouteValueDictionary( new { id = Model.User.Id, monthDate = Model.DateTime.AddMonths(1)}))'>Næste</a>
            </div>
        </div>

        <div class="WeekDay col-md-2">
            <p>Mandag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Tirsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Onsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Torsdag</p>
        </div>
        <div class="WeekDay col-md-2">
            <p>Fredag</p>
        </div>
        <div class="WeekEndDay col-md-1">
            <p>Lør</p>
        </div>
        <div class="WeekEndDay col-md-1">
            <p>Søn</p>
        </div>

        @for (int i = 0; i < 6; i++)
        {
            if (i == 0)
            {
                for (int j = 0; j < @Model.InitIndex; j++)
                {

                    if (j == (7 * (i + 1)) - 1 || j == 7 * (i + 1) - 2)
                    {
                        <div class="WeekEnd col-md-1"></div>
                    }
                    else
                    {
                        <div class="col-md-2 GrayDiv"></div>
                    }
                }
            }

            for (int s = GetStartIndex(i); s <= (i + 1) * 7 - Model.InitIndex; s++)
            {
                if (s + Model.InitIndex == (7 * (i + 1)) - 1 || s + Model.InitIndex == 7 * (i + 1))
                {
                    <div class="WeekEnd col-md-1">
                        <h2>@s</h2>
                    </div>
                }
                else
                {
                    <div class="CalendarDay col-md-2">
                        <h2>@s</h2>
                        @if (s < Model.DateTime.LastDayOfTheMonth().Day)
                        {
                            if (GetAbsenceForDate(s) != null)
                            {
                                <div class="AbsenceLbl">
                                    <p>@GetAbsenceForDate(s).Status.ToString()</p>
                                </div>
                            }
                        }

                    </div>
                }
                if (s == Model.DateTime.LastDayOfTheMonth().Day)
                {
                    for (int m = s + Model.InitIndex; m < (i + 1) * 7; m++)
                    {
                        if (m == (7 * (i + 1)) - 1 || m == 7 * (i + 1) - 2)
                        {
                            <div class="WeekEnd col-md-1"></div>
                        }
                        else
                        {
                            <div class="col-md-2 GrayDiv"></div>
                        }
                    }
                    return;
                }
            }
        }
    </div>

    

    



    @functions
    {

        public Absence GetAbsenceForDate(int day)
        {
            DateTime eventDate = new DateTime(@Model.DateTime.Year, @Model.DateTime.Month, day);
            return Model.User.Absences.FirstOrDefault(x => x.Date == eventDate);
        }

        public int GetStartIndex(int i)
        {
            int result = (i * 7) - Model.InitIndex;

            if (result < 0)
            {
                return (i * 7) + 1;
            }
            else
            {
                return (i * 7) + 1 - Model.InitIndex;
            }
        }

    }
</div>




