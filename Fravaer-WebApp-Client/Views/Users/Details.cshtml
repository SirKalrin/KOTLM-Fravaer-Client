@using System
@using System.Activities.Statements
@using BusinessLogic.Managers
@using DateTimeExtensions
@using Fravaer_WebApp_Client.Models
@using Microsoft.Ajax.Utilities
@using ServiceGateways.Entities
@model Fravaer_WebApp_Client.Models.UserDetailsViewModel
@{
    ViewBag.Title = "Details";
}
<section><link href="~/Styles/UserDetailsStyleSheet.css" rel="stylesheet" type="text/css" /></section>

@{ User currentUser = (User)HttpContext.Current.Session["currentUser"];}
<div class="MainContainer">
    <div class="col-xs-12">
        <h2 align="center">-Kalender-</h2>
    </div>
    <div class="UserDetailsDiv col-xs-3">
        <h1>Information</h1>
        <hr />
        <dl>
            <dt>
                Fornavn
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.FirstName)
            </dd>
            <dt>
                Efternavn
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.LastName)
            </dd>
            <dt>
                Brugernavn
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.UserName)
            </dd>
            <dt>
                Email
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.Email)
            </dd>
            <dt>
                Afdeling
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.Department.Name)
            </dd>
            <dt>
                Rolle
            </dt>
            <dd>
                @Html.DisplayFor(model => model.User.Role)
            </dd>
        </dl>
        <hr />
        @if (currentUser.Role == Role.Administrator)
        {
            <div class="btn btn-success">
                @Html.ActionLink("Redigier", "Edit", new { id = Model.User.Id }, new
           {
               style = "text-decoration:none; color:white;"
           })
            </div>
            <div class="btn btn-danger">
                @Html.ActionLink("Slet", "Delete", new { id = Model.User.Id }, new
           {
               style = "text-decoration:none; color:white;"
           })
            </div>
        }
        <div class="btn btn-warning">
            @Html.ActionLink("Tilbage", "Index", null, new
       {
           style = "text-decoration:none; color:white;"
       })
        </div>
    </div>
    <div class="CalendarContainer col-xs-6" style="text-align: center">
        <div class="MonthsDiv col-xs-12">
            <div class="col-xs-5">
                <button class="col-xs-8 next-previous-btn" type="button" onclick="location.href =
    '@Url.Action("Details", "Users", new RouteValueDictionary(new {id = Model.User.Id, monthDate = Model.DateTime.AddMonths(-1), chosenAbsence = Model.ChosenAbsence}))'">
                    Forrige
                </button>
            </div>
            <div class="col-xs-2" style="margin-left: -3%">
                <h3>@Model.DateTime.ToString("yyyy MMMM")</h3>
            </div>
            <div class="col-xs-5">
                <button style="margin-left: 30%" class="col-xs-8 next-previous-btn" type="button" onclick="location.href =
    '@Url.Action("Details", "Users", new RouteValueDictionary(new {id = Model.User.Id, monthDate = Model.DateTime.AddMonths(1), chosenAbsence = Model.ChosenAbsence}))'">
                    Næste
                </button>
            </div>
        </div>
        <div class="WeekDay col-xs-2">
            <p>Man</p>
        </div>
        <div class="WeekDay col-xs-2">
            <p>Tir</p>
        </div>
        <div class="WeekDay col-xs-2">
            <p>Ons</p>
        </div>
        <div class="WeekDay col-xs-2">
            <p>Tor</p>
        </div>
        <div class="WeekDay col-xs-2">
            <p>Fre</p>
        </div>
        <div class="WeekEndDay col-xs-1">
            <p>Lør</p>
        </div>
        <div class="WeekEndDay col-xs-1">
            <p>Søn</p>
        </div>
        @for (int i = 1; i <= GetWeekCountFromMonth(); i++)
        {
            if (i == 1)
            {
                for (int j = 0; j < @Model.InitIndex; j++)
                {
                    if (j == (7 * i) - 1 || j == 7 * i - 2)
                    {
                        <div class="GrayDayDiv1 col-xs-1"></div>
                    }
                    else
                    {
                        <div class="col-xs-2 GrayDiv"></div>
                    }
                }
            }
            for (int s = GetStartIndex(i); s <= i * 7 - Model.InitIndex; s++)
            {
                if (s + Model.InitIndex == (7 * i) - 1 || s + Model.InitIndex == 7 * i)
                {
                    <div class="GrayDayDiv1 col-xs-1">
                        <p>@s</p>
                    </div>
                }
                else
                {
                    if (GetAbsenceForDate(s) != null && GetAbsenceForDate(s).Status.Equals(Statuses.GRAY))
                    {
                        <div class="GrayDayDiv2 col-xs-2">
                            <p>@s</p>
                        </div>
                    }
                    else
                    {
                        <div class="CalendarDay col-xs-2">
                            <p align="left">@s</p>
                            @if (s <= Model.DateTime.LastDayOfTheMonth().Day)
                            {
                                if (GetAbsenceForDate(s) != null)
                                {
                                    <form method="post" action="@Url.Action("DeleteAbsence", "Users", new RouteValueDictionary(
                                                                    new
                                                                    {
                                                                        id = @Model.User.Id,
                                                                        monthDate = @Model.DateTime.FirstDayOfTheMonth(),
                                                                        absenceType = @Model.ChosenAbsence,
                                                                        deletableAbsenceId = GetAbsenceForDate(s).Id
                                                                    }))">
                                        @Html.AntiForgeryToken()
                                        <input class="AbsenceLbl" type="submit" value="@GetAbsenceForDate(s).Status.ToString()">
                                    </form>
                                }
                                else
                                {
                                    if (currentUser.Role == Role.Administrator || currentUser.Id == Model.User.Id)
                                    {
                                        <form method="post" action="@Url.Action("CreateAbsence", "Users", new RouteValueDictionary(
                                                                        new
                                                                        {
                                                                            id = @Model.User.Id,
                                                                            monthDate = @Model.DateTime.FirstDayOfTheMonth(),
                                                                            absenceType = @Model.ChosenAbsence,
                                                                            absenceDate = Model.DateTime.FirstDayOfTheMonth().AddDays(s - 1)
                                                                        }))">
                                            @Html.AntiForgeryToken()
                                            <input class="AddLabel" type="submit" value="+">
                                        </form>
                                    }
                                }
                            }
                        </div>
                    }
                }
                if (s == Model.DateTime.LastDayOfTheMonth().Day)
                {
                    for (int m = s + Model.InitIndex; m < i * 7; m++)
                    {
                        if (m == (7 * i) - 1 || m == 7 * i - 2)
                        {
                            <div class="GrayDayDiv1 col-xs-1"></div>
                        }
                        else
                        {
                            <div class="col-xs-2 GrayDiv"></div>
                        }
                    }
                    break;
                }
            }
        }
    </div>

    <div class="AbsenceCodeDiv col-xs-3">
        @if (currentUser.Role == Role.Administrator || currentUser.Id == Model.User.Id)
        {
            <h1>Fraværskoder:</h1>
            <hr />
            foreach (var absence in Model.AbsenceTypes)
            {
                if (Model.ChosenAbsence != null && absence.Equals(Model.ChosenAbsence))
                {
                    <input type="radio" name="absenceType" checked="checked">
                    @absence
                    <br />
                }
                else
                {
                    <input type="radio" name="absenceType" onclick="location.href = '@Url.Action("Details", "Users", new RouteValueDictionary(new
                                                                                 {
                                                                                     id = @Model.User.Id,
                                                                                     monthDate = Model.DateTime.FirstDayOfTheMonth(), chosenAbsence = absence
                                                                                 }))'" />
                                                                                @absence
                                                                                <br />
                }
            }
            <hr />
        }
        @if (currentUser.Role == Role.Administrator)
        {
            <h1>Arbejdsfridage:</h1>
            <form method="post" action="@Url.Action("AddGrayDaysToUser", "Users")">

                <input type="hidden" name="id" value="@Model.User.Id" />

                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Monday" />M
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Tuesday" />T
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Wednesday" />O
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Thursday" />T
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Friday" />F
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Saturday" />L
                </div>
                <div class="workFreeDaysDiv col-xs-1">
                    <input type="checkbox" name="chosenDays" value="Sunday" />S
                </div>
                <p style="font-weight: bold"> Start dato:</p>
                <div class="intervalStart col-xs-12">
                    <input type="date" name="dateFrom" />
                </div>
                <p style="font-weight: bold"> Slut dato:</p>
                <div class="intervalStart col-xs-12">
                    <input type="date" name="dateEnd" />
                </div>
                <div class="saveButton col-xs-6">
                    <input class="btn btn-default" type="submit" value="Gem">
                </div>
            </form>
        }
    </div>
</div>
@functions
{
    public Absence GetAbsenceForDate(int day)
    {
        return new UserManager().GetAbsenceForDate(day, Model.DateTime, Model.User.Absences);
    }
    public int GetStartIndex(int i)
    {
        return new UserManager().GetWeeklyStartDate(i, Model.InitIndex);
    }
    public int GetWeekCountFromMonth()
    {
        return new UserManager().GetWeekCountFromMonth(Model.DateTime, Model.InitIndex);
    }
}